name: Build and deploy

on:
  push:
    branches:
      - master
      - develop

env:
  DOCKER_IMAGE_VERSION: ${{ github.ref == 'refs/heads/master' && 'latest' || 'dev' }}
  PROJECT_NAME: ${{ github.ref == 'refs/heads/master' && 'chinchillas-show-frontend' || 'chinchillas-show-dev-frontend' }}

jobs:
  build-application:
    name: Build Application
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/alexbidenko/chinchillas-show/application:${{ env.DOCKER_IMAGE_VERSION }}

  build-nginx:
    name: Build Nginx
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .nginx
          push: true
          tags: ghcr.io/alexbidenko/chinchillas-show/nginx:${{ env.DOCKER_IMAGE_VERSION }}

  deploy:
    name: Deploy
    runs-on: ubuntu-22.04

    needs: [build-application, build-nginx]

    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh/
          ssh-keyscan -t rsa ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa

      - name: Deploy ðŸš€
        run: |
          env IMAGE_VERSION=${{ env.DOCKER_IMAGE_VERSION }} \
          docker stack deploy --prune --with-registry-auth -c docker-compose.yml ${{ env.PROJECT_NAME }}
        env:
          DOCKER_HOST: ssh://${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}
